/**
 * Created by Jzk on 2014/11/6.
 */
var city_name = [ "北京" , "天津" , "河北" , "山西" , "内蒙古","辽宁","吉林","黑龙江" ,"上海","江苏","浙江","安徽","福建","江西","山东","河南","湖北","湖南","广东","广西","海南","重庆","四川","贵州","云南","西藏","陕西","甘肃","青海","宁夏","新疆"];


var population = [
    [0,12493,135622,15323,10906,20785,11011,17038,6390,22347,12528,23228,5655,6714,39600,38345,14290,8564,4094,2210,452,3516,20396,2121,1704,195,8955,4569,836,1187,2182],
    [4624,0,66482,3674,4817,6466,3602,8746,1388,4446,2710,5459,1308,812,21720,7494,3208,1874,888,1018,125,712,4727,874,289,94,2100,1969,231,407,1158],
    [10569,16719,0,13058,18520,18556,10717,25311,955,5585,4583,5484,1506,1384,22501,21245,6795,4200,1595,4781,202,1412,26743,4459,3491,151,8646,4371,1069,552,1970],
    [2525,1657,29092,0,14600,4981,2229,2409,821,3299,3087,3391,1228,552,8972,21390,3070,2068,457,770,68,931,12187,1468,1658,72,7198,1745,454,186,727],
    [2243,2398,47194,26435,0,42348,21838,33472,409,3329,1848,2426,621,608,24136,6385,980,703,381,204,35,348,6583,373,304,34,15450,9648,417,3353,220],
    [1976,1763,31901,2184,22370,0,46534,60214,1144,7261,3935,5845,1716,1231,74062,9465,3636,2193,1380,623,163,832,9459,741,402,91,2298,1284,336,254,904],
    [608,497,12301,734,5632,33810,0,22241,453,3294,1332,1695,630,383,66324,3032,1468,710,432,241,117,156,2147,199,177,17,510,306,123,90,215],
    [1214,979,29719,1204,15180,79254,66079,0,1122,10305,2268,10742,740,721,152553,9609,2350,1810,785,466,143,224,5940,544,213,31,1153,1034,111,103,204],
    [1841,1131,3390,1797,1205,3174,2015,3987,0,145045,72135,92987,9835,19265,12678,12885,9834,5342,4021,989,178,3812,21765,3460,1599,141,2323,1661,402,330,5472],
    [2125,1039,4384,2204,1704,4008,2804,5962,20980,0,26161,120183,6257,11349,28615,19360,13775,8553,2123,2668,631,5226,39436,18464,10865,155,5953,3139,1371,407,5046],
    [950,354,1999,978,837,1818,1256,2782,11613,27476,0,66037,8460,71507,7667,16723,21791,18988,1660,5332,257,13014,45970,28882,6617,80,3388,1475,507,402,1155],
    [1001,443,2707,1170,482,2258,1302,1830,9283,41575,7960,0,1657,4381,9535,18524,5017,2805,828,789,261,883,13867,4265,5083,82,2478,1000,404,116,1007],
    [452,161,847,713,298,883,651,1056,1821,5907,12758,12851,0,52795,4505,4906,11278,8791,7799,3420,421,10583,40944,12030,1456,55,1539,388,151,169,348],
    [488,159,1258,367,288,1353,603,981,4391,8499,18602,10141,5228,0,3053,2922,8769,18099,8084,1263,240,577,4293,2584,619,44,606,402,87,55,276],
    [2129,1528,16253,3864,5402,11140,19192,39311,1802,21062,7355,11583,3136,2030,0,17921,5743,2428,1161,1371,226,1479,13916,3835,8431,214,5598,3955,1749,492,4004],
    [2282,962,13576,9657,1560,6696,3011,6177,2178,9073,4886,15246,1492,1791,23644,0,16826,4055,1913,1257,416,1286,18482,3436,3665,301,11817,4639,1473,474,4023],
    [1581,718,6506,2468,1181,4904,2400,2700,3333,10385,7351,7044,3498,6867,7727,42491,0,26390,4100,2914,722,9887,27227,2861,1595,142,7100,1827,619,283,1961],
    [790,350,2493,1013,402,2214,1033,1442,1176,3195,3748,2125,2200,7743,2304,3816,16565,0,6237,5291,905,1870,7595,7307,2576,89,1088,689,259,115,1332],
    [2409,1117,5661,2852,2102,6160,4916,7340,3890,17548,14886,34478,27312,149353,12509,94592,136823,314632,0,225205,16143,44519,234797,54210,8915,93,24155,5842,706,659,2444],
    [383,226,1376,358,193,1200,576,1032,817,1934,2834,1654,1847,2323,1299,1942,3136,19913,14157,0,1269,873,4600,6239,2524,23,454,236,118,40,362],
    [152,66,334,202,225,453,448,690,114,917,730,1302,1439,2002,748,1726,3638,5941,16035,9314,0,1079,5157,782,322,8,484,195,76,38,178],
    [488,251,1343,937,332,1055,457,712,1166,2262,2349,1135,1261,969,1704,2089,6129,2652,1404,820,252,0,62594,9059,3802,288,1243,481,261,114,1248],
    [1813,700,4893,3248,780,7426,2409,3163,2500,5733,5039,2703,1970,2042,5274,5936,5490,4564,2463,1510,392,48969,0,7365,16965,1294,5423,3037,1076,219,3126],
    [575,340,1811,553,137,3289,774,1365,1854,3135,2767,1552,1286,1730,3957,3438,2505,11598,1983,4373,140,7192,34974,0,6907,35,809,190,48,19,169],
    [456,215,1593,1338,253,1158,747,985,1429,3040,6271,1925,2857,2815,2702,3790,4626,13457,3439,3286,163,11904,49393,22491,0,54,1071,360,99,60,255],
    [16,10,127,104,21,46,26,23,14,175,224,177,57,29,255,666,181,249,16,12,6,788,7558,110,152,0,541,1120,689,18,45],
    [2644,1124,9241,8065,2812,7774,1964,2692,2977,8143,4552,5357,1253,1409,12232,41757,6551,2981,1221,651,252,1312,16021,637,662,312,0,15990,1684,1857,3669],
    [1162,929,6396,2845,901,5666,1852,1960,1735,5483,3142,2525,658,660,8185,13814,1855,1818,555,252,56,589,7293,292,248,169,16018,0,5740,3498,3040],
    [256,218,2889,1001,290,1947,730,567,367,2389,1005,1235,181,112,3956,7395,579,642,138,63,12,273,4016,56,79,249,5028,7331,0,210,360],
    [575,417,4176,1257,2559,2396,623,819,629,2453,1663,2310,223,145,4005,6899,391,496,117,46,9,198,2298,69,33,6,10677,12304,255,0,488],
    [926,1030,9282,2850,580,2022,1271,1328,2430,27272,5292,16766,855,807,29632,83213,11639,7224,1221,808,81,8035,89791,685,531,57,18842,71896,3882,6930,0]

];


//2.转换数据，并输出转换后的数据
var chord_layout = d3.layout.chord()
    .padding(0.01)
    .sortSubgroups(d3.descending)
    .matrix(population);

console.log(chord_layout.groups());
console.log(chord_layout.chords());

//3.SVG，弦图，颜色函数的定义
var width  = 800;
var height = 800;
var innerRadius = width/2 * 0.7;
var outerRadius = innerRadius * 1.1;
//    alert(outerRadius);

var color20 = d3.scale.category20();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
    .append("g")
    .attr("transform", "translate(" + width/2 + "," + height/2 + ")");

//4.绘制外部弦（即分组，有多少个城市画多少个弦），及绘制城市名称
var outer_arc =  d3.svg.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius);

var g_outer = svg.append("g");

g_outer.selectAll("path")
    .data(chord_layout.groups)
    .enter()
    .append("path")
    .style("fill", function(d) { return color20(d.index); })
    .style("stroke", function(d) { return color20(d.index); })
//            .style("fill", "blue")
    .attr("d", outer_arc )
    .on("click", function(d,i){
        d.show=true;
        alert(d.show);
    });

g_outer.selectAll("text")
    .data(chord_layout.groups)
    .enter()
    .append("text")
    .each( function(d,i) {
        d.angle = (d.startAngle + d.endAngle) / 2;
        d.name = city_name[i];
    })
    .attr("dy",".35em")
    .attr("transform", function(d){
        return "rotate(" + ( d.angle * 180 / Math.PI ) + ")" +
            "translate(0,"+ -1.0*(outerRadius+10) +")" +
            ( ( d.angle > Math.PI*3/4 && d.angle < Math.PI*5/4 ) ? "rotate(180)" : "");
    })
    .text(function(d){
        return d.name;
    });


//5.绘制内部弦（即所有城市人口的来源，即有5*5=25条弧）
var inner_chord =  d3.svg.chord()
    .radius(innerRadius);

var linestobe = svg.append("g")
    .attr("class", "chord")
    .selectAll("path")
    .data(chord_layout.chords)
    .enter()
    .append("path")
    .attr("d", inner_chord )
    .style("fill", function(d) { return color20(d.source.index); })
    .style("opacity", 0.2)
    .on("mouseover",function(d,i){
        d3.select(this)
            .style("fill","red")
            .style("opacity",1);

        d3.select("#tooltip")
            .select("#name1")
            .text(city_name[d.source.index]);
        d3.select("#tooltip")
            .select("#name2")
            .text(city_name[d.target.index]);
        d3.select("#tooltip")
            .select("#name3")
            .text(city_name[d.source.index]);
        d3.select("#tooltip")
            .select("#name4")
            .text(city_name[d.target.index]);
        d3.select("#tooltip")
            .select("#name5")
            .text(city_name[d.target.index]);
        d3.select("#tooltip")
            .select("#name6")
            .text(city_name[d.source.index]);
        d3.select("#tooltip")
            .select("#num1")
            .text(d.target.value/1000);
        d3.select("#tooltip")
            .select("#num2")
            .text(d.source.value/1000);
//        d3.select("#placeholder")
//            .attr("src", "images/"+d.image);
        d3.select("#tooltip").classed("hidden", false);
    })
    .on("mouseout",function(d,i) {
        d3.select(this)
            .transition()
            .duration(500)
            .style("opacity",0.2)
            .style("fill",color20(d.source.index));
        d3.select("#tooltip").classed("hidden", true);
    });

var ticks = svg.append("g").selectAll("g")
    .data(chord_layout.groups)
    .enter().append("g").selectAll("g")
    .data(groupTicks)
    .enter().append("g")
    .attr("transform", function(d) {
        return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
            + "translate(" + (outerRadius) + ",0)";
    });

ticks.append("line")
    .attr("x1", 1)
    .attr("y1", 0)
    .attr("x2", 5)
    .attr("y2", 0)
    .style("stroke", "#000");

ticks.append("text")
    .attr("x", 8)
    .attr("class","paragraph")
    .attr("dy", ".35em")
    .attr("transform", function(d) { return d.angle > Math.PI ? "rotate(180)translate(-16)" : null; })
    .style("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
    .text(function(d) { return d.label; });

function groupTicks(d) {
    var k = (d.endAngle - d.startAngle) / d.value;
    console.log(d.value);
    console.log(d3.range(0, d.value, 100000));
    return d3.range(0, d.value, 100000).map(function(v, i) {
        return {
            angle: v * k + d.startAngle,
            label: i % 5 ? null : v / 100000 + "百万"
        };
    });
}

//    chord_layout.on("tick", function(){
//
//        linestobe.style("opacity",function(d){
//            if (d.source.show)
//                return 1;
//            else
//                return 0.5;
//        })
//                .style("fill","yelllow")
//    });
//

